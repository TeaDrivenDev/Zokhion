<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:local="clr-namespace:TeaDriven.Zokhion;assembly=Zokhion"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:ui="clr-namespace:TeaDriven.Zokhion.UIHelper;assembly=Zokhion"
        xmlns:viewModels="clr-namespace:TeaDriven.Zokhion.ViewModels;assembly=Zokhion"
        x:Name="MainWindowView"
        Title="Zokhion"
        Width="1600"
        Height="900"
        Activated="MainWindow_OnActivated"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <SolidColorBrush x:Key="FeatureHighlightBrush"
                         Opacity="0.3"
                         Color="Teal" />

        <ui:BindingProxy x:Key="MainWindowBindingProxy"
                         Data="{Binding ElementName=MainWindowView}" />

        <system:Double x:Key="DefaultButtonSize">
            20
        </system:Double>

        <system:Double x:Key="TabletButtonSize">
            32
        </system:Double>

        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}"
               TargetType="{x:Type Button}">
            <Setter Property="Height" Value="{StaticResource DefaultButtonSize}" />
            <Setter Property="Width" Value="{StaticResource DefaultButtonSize}" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={StaticResource MainWindowBindingProxy},
                                               Path=Data.DataContext.HasTouchInput}"
                             Value="True">
                    <Setter Property="Height" Value="{StaticResource TabletButtonSize}" />
                    <Setter Property="Width" Value="{StaticResource TabletButtonSize}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"
                               MinHeight="230" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox x:Name="BaseDirectory"
                         Grid.Column="0"
                         Height="25"
                         Margin="5"
                         materialDesign:HintAssist.Hint="Base Directory"
                         Text="{Binding BaseDirectory.Value,
                                        UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="NoWrap" />

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal">
                    <Button Padding="0 -10"
                            Command="{Binding RefreshDirectoriesCommand}"
                            IsEnabled="{Binding IsBaseDirectoryValid.Value}"
                            ToolTip="Refresh directories">
                        <materialDesign:PackIcon Kind="Reload" />
                    </Button>
                    <ToggleButton Margin="7 0 0 0"
                                  IsChecked="{Binding FilterBySourceDirectoryPrefixes.Value}"
                                  IsEnabled="{Binding IsBaseDirectoryValid.Value}"
                                  ToolTip="Toggle filtering source folders by prefixes" />
                    <TextBox Height="25"
                             Margin="5"
                             materialDesign:HintAssist.Hint="Prefixes"
                             IsEnabled="{Binding IsBaseDirectoryValid.Value}"
                             Text="{Binding SourceDirectoryPrefixes.Value,
                                            UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="NoWrap"
                             ToolTip="Source folder prefixes" />
                    <Button Margin="5"
                            Padding="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Click="SelectFolder_Click"
                            Content="…"
                            ToolTip="Select base folder">
                        <Button.Style>
                            <Style BasedOn="{StaticResource {x:Type Button}}"
                                   TargetType="{x:Type Button}">
                                <Setter Property="Margin" Value="3" />
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>

            <ComboBox Grid.Row="1"
                      Margin="5"
                      materialDesign:HintAssist.Hint="Select Directory"
                      ItemsSource="{Binding Directories}"
                      SelectedItem="{Binding SelectedDirectory.Value}">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MaterialDesignComboBox}"
                           TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Directories.Count}"
                                         Value="0">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       Text="{Binding Name}" />
                            <TextBlock Grid.Column="1"
                                       HorizontalAlignment="Right"
                                       Text="{Binding FileCount}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <!--  Search  -->
            <dragablz:TabablzControl Grid.Row="2"
                                     AddLocationHint="Last"
                                     ClosingItemCallback="{Binding Path=CloseSearchTabCallback}"
                                     HeaderMemberPath="Header.Value"
                                     IsEnabled="{Binding IsBaseDirectoryValid.Value}"
                                     ItemsSource="{Binding Searches}"
                                     NewItemFactory="{Binding CreateSearchTab}"
                                     SelectedItem="{Binding ActiveSearchTab.Value}"
                                     ShowDefaultAddButton="True"
                                     ShowDefaultCloseButton="True">
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type viewModels:SearchViewModel}">
                        <Grid>
                            <Grid.Resources>
                                <CollectionViewSource x:Key="SortedFiles"
                                                      IsLiveSortingRequested="True"
                                                      Source="{Binding Files}">
                                    <CollectionViewSource.SortDescriptions>
                                        <componentModel:SortDescription Direction="Ascending"
                                                                        PropertyName="CreationTime" />
                                    </CollectionViewSource.SortDescriptions>
                                </CollectionViewSource>
                                <CollectionViewSource x:Key="SortedAndGroupedFiles"
                                                      IsLiveGroupingRequested="True"
                                                      IsLiveSortingRequested="True"
                                                      Source="{Binding Files}">
                                    <CollectionViewSource.SortDescriptions>
                                        <componentModel:SortDescription Direction="Ascending"
                                                                        PropertyName="CreationTime" />
                                    </CollectionViewSource.SortDescriptions>
                                    <CollectionViewSource.GroupDescriptions>
                                        <PropertyGroupDescription PropertyName="Group" />
                                    </CollectionViewSource.GroupDescriptions>
                                </CollectionViewSource>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Orientation="Horizontal">
                                    <ComboBox x:Name="SelectedFeature"
                                              Width="140"
                                              Margin="5 0"
                                              DisplayMemberPath="Name"
                                              ItemsSource="{Binding ElementName=MainWindowView,
                                                                    Path=DataContext.GroupCategories.Value}"
                                              SelectedValue="{Binding FeatureToGroupBy.Value}"
                                              SelectedValuePath="GroupCategory" />
                                </StackPanel>

                                <TextBox x:Name="SearchString"
                                         Grid.Column="1"
                                         Height="25"
                                         Margin="5"
                                         materialDesign:HintAssist.Hint="Search"
                                         KeyUp="SearchString_KeyUp"
                                         Text="{Binding SearchString.Value,
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         TextWrapping="NoWrap" />

                                <Button Grid.Column="1"
                                        Margin="5 0"
                                        Padding="0 -1 -1 0"
                                        HorizontalAlignment="Right"
                                        Command="{Binding ClearSearchStringCommand}"
                                        Content="&#x2716;"
                                        FontSize="10"
                                        Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                        IsTabStop="False"
                                        ToolTip="Clear search text">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource {x:Type Button}}"
                                               TargetType="Button">

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=SearchString,
                                                                               Path=Text}"
                                                             Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <StackPanel Grid.Column="2"
                                            Orientation="Horizontal">
                                    <CheckBox Margin="0 0 5 0"
                                              Content="From base"
                                              IsChecked="{Binding SearchFromBaseDirectory.Value}"
                                              IsEnabled="{Binding CanToggleSearchFromBaseDirectory.Value}"
                                              ToolTip="Search from base folder" />
                                    <CheckBox Margin="0 0 5 0"
                                              Content="No features"
                                              IsChecked="{Binding FilterHasNoFeatures.Value}"
                                              ToolTip="Show files without features" />
                                    <CheckBox Margin="0 0 5 0"
                                              Content="Features"
                                              IsChecked="{Binding FilterHasFeatures.Value}"
                                              ToolTip="Show files with features" />

                                    <Button Margin="5 3"
                                            Padding="0 -10"
                                            Command="{Binding RefreshCommand}"
                                            ToolTip="Refresh view">

                                        <materialDesign:PackIcon Kind="Reload" />
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <DataGrid x:Name="FilesGrid"
                                      Grid.Row="1"
                                      Margin="5"
                                      materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                                      materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2"
                                      AutoGenerateColumns="False"
                                      ItemsSource="{Binding Source={StaticResource SortedAndGroupedFiles}}"
                                      MouseMove="FilesGrid_MouseMove"
                                      PreviewMouseLeftButtonDown="FilesGrid_PreviewMouseLeftButtonDown"
                                      SelectedItem="{Binding SelectedFile.Value}"
                                      SelectionMode="Extended">
                                <DataGrid.Style>
                                    <Style BasedOn="{StaticResource {x:Type DataGrid}}"
                                           TargetType="{x:Type DataGrid}">
                                        <!--<Setter Property="ItemsSource" Value="{Binding Source={StaticResource SortedFiles}}" />-->

                                        <!--<Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=GroupByFeatureValue,
                                                                           Path=IsChecked}"
                                                         Value="True">-->
                                        <!--<Setter Property="ItemsSource" Value="{Binding Source={StaticResource SortedAndGroupedFiles}}" />-->
                                        <!--</DataTrigger>
                                        </Style.Triggers>-->
                                    </Style>
                                </DataGrid.Style>
                                <DataGrid.Resources>
                                    <Style TargetType="{x:Type ContentPresenter}">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>

                                    <Style BasedOn="{StaticResource MaterialDesignDataGridCell}"
                                           TargetType="{x:Type DataGridCell}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            SnapsToDevicePixels="True">
                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                          VerticalAlignment="Center"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                                            <Expander IsExpanded="True">
                                                                <Expander.Header>
                                                                    <TextBlock Margin="3">
                                                                        <Run>
                                                                            <Run.Style>
                                                                                <Style TargetType="{x:Type Run}">
                                                                                    <Setter Property="Text" Value="{Binding Name, Mode=OneWay}" />

                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding Name,
                                                                                                                       Mode=OneWay}"
                                                                                                     Value="">
                                                                                            <Setter Property="Text" Value="(None)" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Run.Style>
                                                                        </Run>

                                                                        <Run Text="{Binding ItemCount,
                                                                                            StringFormat=({0}),
                                                                                            Mode=OneWay}" />
                                                                    </TextBlock>
                                                                </Expander.Header>

                                                                <ItemsPresenter Margin="3" />
                                                            </Expander>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                        <GroupStyle.Panel>
                                            <ItemsPanelTemplate>
                                                <DataGridRowsPresenter />
                                            </ItemsPanelTemplate>
                                        </GroupStyle.Panel>
                                    </GroupStyle>
                                </DataGrid.GroupStyle>
                                <DataGrid.RowStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignDataGridRow}"
                                           TargetType="DataGridRow">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Name,
                                                                           Converter={x:Static ui:NameHasFeaturesConverter.Instance}}"
                                                         Value="True">
                                                <Setter Property="Background" Value="{StaticResource FeatureHighlightBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="FileActionsButton"
                                                        Padding="0 -1 -1 0"
                                                        Content="…"
                                                        ToolTip="File Actions">
                                                    <Button.Resources>
                                                        <ui:BindingProxy x:Key="FileInfoBindingProxy"
                                                                         Data="{Binding}" />
                                                    </Button.Resources>

                                                    <Button.ContextMenu>
                                                        <ContextMenu x:Name="FileActionsButtonContextMenu">
                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                        Path=Data.DataContext.OpenFromSearchCommand}"
                                                                      CommandParameter="{Binding Source={StaticResource FileInfoBindingProxy},
                                                                                                 Path=Data.FileInfo}"
                                                                      Header="Open File" />
                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                        Path=Data.DataContext.OpenExplorerCommand}"
                                                                      CommandParameter="{Binding Source={StaticResource FileInfoBindingProxy},
                                                                                                 Path=Data.FileInfo}"
                                                                      Header="Show in Explorer" />
                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                        Path=Data.DataContext.ShowFilePropertiesCommand}"
                                                                      CommandParameter="{Binding Source={StaticResource FileInfoBindingProxy},
                                                                                                 Path=Data.FileInfo}"
                                                                      Header="Show File Properties" />
                                                            <Separator />
                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                        Path=Data.DataContext.DeleteFileCommand}"
                                                                      CommandParameter="{Binding Source={StaticResource FileInfoBindingProxy},
                                                                                                 Path=Data.FileInfo}"
                                                                      Header="Delete File" />
                                                        </ContextMenu>
                                                    </Button.ContextMenu>

                                                    <Button.Triggers>
                                                        <EventTrigger RoutedEvent="Button.Click"
                                                                      SourceName="FileActionsButton">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FileActionsButtonContextMenu"
                                                                                                   Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <system:Boolean>True</system:Boolean>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Button.Triggers>

                                                    <Button.Style>
                                                        <Style BasedOn="{StaticResource {x:Type Button}}"
                                                               TargetType="Button">
                                                            <Setter Property="Margin" Value="3 -3" />
                                                            <Setter Property="Opacity" Value="0.4" />

                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=FileActionsButtonContextMenu,
                                                                                               Path=IsOpen}"
                                                                             Value="True">
                                                                    <Setter Property="Opacity" Value="1" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                                              AncestorType=DataGridRow},
                                                                                               Path=IsMouseOver}"
                                                                             Value="True">
                                                                    <Setter Property="Opacity" Value="1" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                               Path=DataContext.HasTouchInput}"
                                                                             Value="True">
                                                                    <Setter Property="Margin" Value="3 -1" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Width="*"
                                                            Header="Name"
                                                            IsReadOnly="True"
                                                            SortMemberPath="Name">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type viewModels:FileViewModel}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>

                                                    <Grid.Resources>
                                                        <ui:BindingProxy x:Key="FileChangeBindingProxy">
                                                            <ui:BindingProxy.Data>
                                                                <MultiBinding Converter="{x:Static ui:FileChangesToEnumConverter.Instance}">
                                                                    <Binding Path="FullName" />
                                                                    <Binding ElementName="MainWindowView"
                                                                             Path="DataContext.FileChanges.Value" />
                                                                </MultiBinding>
                                                            </ui:BindingProxy.Data>
                                                        </ui:BindingProxy>
                                                    </Grid.Resources>

                                                    <TextBlock Grid.Column="0"
                                                               Margin="0 0 5 0"
                                                               VerticalAlignment="Center"
                                                               FontSize="10"
                                                               Text="{Binding NumberOfInstances}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding NumberOfInstances}"
                                                                                 Value="1">
                                                                        <Setter Property="Visibility" Value="Hidden" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock Grid.Column="1"
                                                               Text="{Binding Name}"
                                                               TextTrimming="CharacterEllipsis"
                                                               ToolTip="{Binding RelativeSource={RelativeSource Self},
                                                                                 Path=Text}" />

                                                    <StackPanel Grid.Column="2">
                                                        <materialDesign:PackIcon Kind="Edit">
                                                            <materialDesign:PackIcon.Style>
                                                                <Style TargetType="materialDesign:PackIcon">
                                                                    <Setter Property="Visibility" Value="Collapsed" />

                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Source={StaticResource FileChangeBindingProxy},
                                                                                                       Path=Data}"
                                                                                     Value="Renamed">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </materialDesign:PackIcon.Style>
                                                        </materialDesign:PackIcon>
                                                        <materialDesign:PackIcon Kind="ArrowRightBold">
                                                            <materialDesign:PackIcon.Style>
                                                                <Style TargetType="materialDesign:PackIcon">
                                                                    <Setter Property="Visibility" Value="Collapsed" />

                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Source={StaticResource FileChangeBindingProxy},
                                                                                                       Path=Data}"
                                                                                     Value="Moved">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </materialDesign:PackIcon.Style>
                                                        </materialDesign:PackIcon>
                                                        <materialDesign:PackIcon Kind="DeleteForever">
                                                            <materialDesign:PackIcon.Style>
                                                                <Style TargetType="materialDesign:PackIcon">
                                                                    <Setter Property="Visibility" Value="Collapsed" />

                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Source={StaticResource FileChangeBindingProxy},
                                                                                                       Path=Data}"
                                                                                     Value="Deleted">
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </materialDesign:PackIcon.Style>
                                                        </materialDesign:PackIcon>
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Width="100"
                                                            Header="Directory"
                                                            IsReadOnly="True"
                                                            SortMemberPath="DirectoryName">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Cursor="Hand"
                                                           PreviewMouseLeftButtonUp="SearchResultDirectory_OnPreviewMouseLeftButtonUp"
                                                           TextDecorations="Underline">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{x:Static ui:RelativePathConverter.Instance}">
                                                            <Binding Path="DirectoryName" />
                                                            <Binding ElementName="BaseDirectory"
                                                                     Path="Text" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <materialDesign:DataGridTextColumn Width="150"
                                                                       Binding="{Binding LastWriteTime,
                                                                                         StringFormat=s}"
                                                                       Header="Date"
                                                                       IsReadOnly="True" />
                                    <materialDesign:DataGridTextColumn Width="75"
                                                                       Binding="{Binding Length,
                                                                                         Converter={x:Static ui:BytesToMegabytesConverter.Instance},
                                                                                         StringFormat={}{0:###0.0} MB}"
                                                                       Header="Size"
                                                                       IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="HorizontalAlignment" Value="Right" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Border Grid.Row="1"
                                    Background="White"
                                    Opacity="0.3"
                                    Visibility="{Binding IsUpdating.Value,
                                                         Converter={x:Static ui:InvertableBooleanToVisibilityConverter.Instance}}" />

                            <StackPanel Grid.Row="2"
                                        Orientation="Horizontal">
                                <TextBlock Margin="5 3 5 5"
                                           Text="{Binding Files,
                                                          Converter={x:Static ui:FilesToUniqueCountConverter.Instance},
                                                          StringFormat={}{0} items}" />
                                <TextBlock Margin="5 3 5 5"
                                           Text="{Binding Files,
                                                          Converter={x:Static ui:FilesToTotalSizeConverter.Instance},
                                                          StringFormat='({0:#,###,##0.0} MB)'}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </dragablz:TabablzControl>
        </Grid>

        <GridSplitter Grid.Column="1"
                      Width="5"
                      VerticalAlignment="Stretch"
                      Cursor="SizeWE"
                      ResizeBehavior="PreviousAndNext" />

        <TabControl Grid.Column="2"
                    Margin="5"
                    mde:TabControlAssist.TabHeaderHorizontalAlignment="Left"
                    IsEnabled="{Binding IsBaseDirectoryValid.Value}"
                    Style="{StaticResource MaterialDesignTabControl}">
            <TabItem Header="File Metadata"
                     TextElement.Foreground="{DynamicResource MaterialDesignBody}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0"
                          Margin="0 0 0 5">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedFile.Value}"
                                                 Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.Resources>
                            <SolidColorBrush x:Key="ChangedColor"
                                             Opacity="0.4"
                                             Color="SeaGreen" />
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="OriginalName"
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Height="25"
                                 Margin="0 5 5 0"
                                 Padding="3 0"
                                 IsReadOnly="True"
                                 SelectionChanged="OriginalFileName_SelectionChanged"
                                 Text="{Binding OriginalFileName.Value}"
                                 TextWrapping="NoWrap" />

                        <StackPanel Grid.Row="0"
                                    Grid.Column="1"
                                    Orientation="Horizontal">
                            <Button Padding="0"
                                    Command="{Binding OpenCommand}"
                                    CommandParameter="{Binding SelectedFile.Value}"
                                    ToolTip="Open file">

                                <materialDesign:PackIcon Kind="OpenInNew" />
                            </Button>

                            <Button Margin="5 0 0 0"
                                    Padding="0"
                                    Command="{Binding OpenExplorerCommand}"
                                    CommandParameter="{Binding SelectedFile.Value}"
                                    ToolTip="Show in Explorer">

                                <materialDesign:PackIcon Kind="FolderOutline" />
                            </Button>
                        </StackPanel>

                        <WrapPanel Grid.Row="1"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Margin="0 5 5 5"
                                   Orientation="Horizontal">
                            <CheckBox Height="23"
                                      Margin="0 0 20 0"
                                      VerticalAlignment="Center"
                                      Content="Treat parenthesized part as names"
                                      IsChecked="{Binding TreatParenthesizedPartAsNames.Value}" />

                            <CheckBox Height="23"
                                      Margin="0 0 20 0"
                                      VerticalAlignment="Center"
                                      Content="Fix up names in main part"
                                      IsChecked="{Binding FixupNamesInMainPart.Value}" />

                            <ComboBox Width="145"
                                      Margin="0 0 20 0"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      FontSize="12"
                                      SelectedValue="{Binding UnderscoreHandling.Value}"
                                      SelectedValuePath="Tag">
                                <ComboBoxItem Tag="Ignore">
                                    Ignore underscores
                                </ComboBoxItem>
                                <ComboBoxItem Tag="Replace">
                                    Replace underscores
                                </ComboBoxItem>
                                <ComboBoxItem Tag="TrimSuffix">
                                    Trim underscore suffix
                                </ComboBoxItem>
                            </ComboBox>

                            <CheckBox Height="23"
                                      Margin="0 0 20 0"
                                      VerticalAlignment="Center"
                                      Content="Detect names in main and names parts"
                                      IsChecked="{Binding DetectNamesInMainAndNamesParts.Value}" />

                            <CheckBox Height="23"
                                      Margin="0 0 20 0"
                                      VerticalAlignment="Center"
                                      Content="Recapitalize names"
                                      IsChecked="{Binding RecapitalizeNames.Value}" />
                        </WrapPanel>

                        <TextBox x:Name="NewName"
                                 Grid.Row="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 Height="25"
                                 Padding="3 0"
                                 SelectionChanged="NewFileName_SelectionChanged"
                                 Text="{Binding NewFileName.Value,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="NoWrap">
                            <TextBox.Style>
                                <Style BasedOn="{StaticResource MaterialDesignTextBox}"
                                       TargetType="TextBox">
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{x:Static ui:AllItemsEqualConverter.Instance}">
                                                    <Binding Path="NewFileName.Value" />
                                                    <Binding Path="OriginalFileName.Value" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>

                                            <Setter Property="Background" Value="{StaticResource ChangedColor}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <GroupBox Grid.Column="0"
                                  Margin="0 0 2 0"
                                  Header="Names"
                                  Style="{DynamicResource MaterialDesignCardGroupBox}">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   VerticalAlignment="Center"
                                                   Text="Names" />
                                        <StackPanel Grid.Column="1"
                                                    Orientation="Horizontal">
                                            <Button Margin="0 0 5 0"
                                                    Command="{Binding ElementName=MainWindowView,
                                                                      Path=DataContext.ReviveFileSystemWatcherCommand}">
                                                <Button.Style>
                                                    <Style BasedOn="{StaticResource {x:Type Button}}"
                                                           TargetType="{x:Type Button}">
                                                        <Setter Property="Background" Value="DarkRed" />
                                                        <Setter Property="ToolTip" Value="FileSystemWatcher is dead." />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                           Path=DataContext.IsFileSystemWatcherAlive.Value}"
                                                                         Value="True">
                                                                <Setter Property="Background" Value="DarkGreen" />
                                                                <Setter Property="ToolTip" Value="FileSystemWatcher is alive." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button Margin="0 0 5 0"
                                                    Padding="0 -10"
                                                    Command="{Binding ElementName=MainWindowView,
                                                                      Path=DataContext.SetNameFilterCommand}"
                                                    ToolTip="Search for file name parts">
                                                <materialDesign:PackIcon Kind="FileFindOutline" />
                                            </Button>
                                            <Button Padding="0 -10"
                                                    Command="{Binding ElementName=MainWindowView,
                                                                      Path=DataContext.ResetNameSelectionCommand}"
                                                    ToolTip="Reset name selection">

                                                <materialDesign:PackIcon Kind="Undo" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Grid.Resources>
                                    <ui:BindingProxy x:Key="MainWindowBindingProxy"
                                                     Data="{Binding ElementName=MainWindowView}" />

                                    <Style x:Key="NamesListBoxStyle"
                                           BasedOn="{StaticResource MaterialDesignListBox}"
                                           TargetType="{x:Type ListBox}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

                                        <Setter Property="ItemContainerStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="Focusable" Value="False" />
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate DataType="viewModels:NameViewModel">
                                                    <DataTemplate.Resources>
                                                        <Style x:Key="NameActionButton"
                                                               BasedOn="{StaticResource {x:Type Button}}"
                                                               TargetType="{x:Type Button}">
                                                            <Setter Property="Margin" Value="0 2 5 1" />
                                                            <Setter Property="Padding" Value="0 -5 0 -4" />

                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                               Path=DataContext.HasTouchInput}"
                                                                             Value="True">
                                                                    <Setter Property="Margin" Value="0 2 5 2" />
                                                                    <Setter Property="Opacity" Value="1" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </DataTemplate.Resources>

                                                    <CheckBox HorizontalContentAlignment="Stretch"
                                                              VerticalContentAlignment="Center"
                                                              Foreground="{StaticResource MaterialDesignBody}"
                                                              IsChecked="{Binding IsSelected}">
                                                        <CheckBox.Style>
                                                            <Style TargetType="CheckBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsNewlyDetected.Value}"
                                                                                 Value="True">
                                                                        <Setter Property="Background" Value="{StaticResource SecondaryAccentBrush}" />
                                                                    </DataTrigger>

                                                                    <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                                   Path=DataContext.HasTouchInput}"
                                                                                 Value="True">
                                                                        <Setter Property="Margin" Value="0 3" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.Style>
                                                                <Style TargetType="Grid">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsAdded.Value}"
                                                                                     Value="True">
                                                                            <Setter Property="Background">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush Opacity="0.4"
                                                                                                     Color="SeaGreen" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding IsSelected}"
                                                                                     Value="True">
                                                                            <Setter Property="Background">
                                                                                <Setter.Value>
                                                                                    <SolidColorBrush Color="{StaticResource Accent700}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Style>

                                                            <StackPanel VerticalAlignment="Center"
                                                                        Orientation="Horizontal">
                                                                <TextBlock Grid.Column="0"
                                                                           Margin="5 0 0 0"
                                                                           HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Center"
                                                                           Text="{Binding Name.Value}">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsSelected}"
                                                                                             Value="True">
                                                                                    <Setter Property="Foreground">
                                                                                        <Setter.Value>
                                                                                            <SolidColorBrush Color="{StaticResource Accent700Foreground}" />
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                                <TextBlock Grid.Column="0"
                                                                           Margin="5 0 15 0"
                                                                           HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Center"
                                                                           FontSize="10"
                                                                           Text="{Binding Count.Value}">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsSelected}"
                                                                                             Value="True">
                                                                                    <Setter Property="Foreground">
                                                                                        <Setter.Value>
                                                                                            <SolidColorBrush Color="{StaticResource Accent700Foreground}" />
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </StackPanel>

                                                            <StackPanel Grid.Column="1"
                                                                        Orientation="Horizontal">
                                                                <StackPanel.Resources>
                                                                    <ui:BindingProxy x:Key="MainWindowBindingProxy"
                                                                                     Data="{Binding ElementName=MainWindowView}" />
                                                                    <ui:BindingProxy x:Key="NameViewModelBindingProxy"
                                                                                     Data="{Binding ElementName=ActionsButton,
                                                                                                    Path=DataContext}" />
                                                                </StackPanel.Resources>
                                                                <materialDesign:PackIcon Margin="0 0 7 0"
                                                                                         VerticalAlignment="Center"
                                                                                         Kind="Pin"
                                                                                         Visibility="{Binding IsPinned,
                                                                                                              Converter={x:Static ui:InvertableBooleanToVisibilityConverter.Instance}}" />
                                                                <Button x:Name="ActionsButton"
                                                                        Content="…">
                                                                    <Button.ContextMenu>
                                                                        <ContextMenu x:Name="ActionsButtonContextMenu">
                                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                                        Path=Data.DataContext.SearchForTextCommand}"
                                                                                      CommandParameter="{Binding Source={StaticResource NameViewModelBindingProxy},
                                                                                                                 Path=Data.Name.Value}"
                                                                                      Header="Search" />
                                                                            <MenuItem Command="{Binding Source={StaticResource MainWindowBindingProxy},
                                                                                                        Path=Data.DataContext.SearchForNameCommand}"
                                                                                      CommandParameter="{Binding Source={StaticResource NameViewModelBindingProxy},
                                                                                                                 Path=Data.Name.Value}"
                                                                                      Header="Search as Name" />
                                                                            <MenuItem Command="{Binding Source={StaticResource NameViewModelBindingProxy},
                                                                                                        Path=Data.PinCommand}">
                                                                                <MenuItem.Style>
                                                                                    <Style BasedOn="{StaticResource MaterialDesignMenuItem}"
                                                                                           TargetType="{x:Type MenuItem}">
                                                                                        <Setter Property="Header" Value="Pin" />

                                                                                        <Style.Triggers>
                                                                                            <DataTrigger Binding="{Binding Source={StaticResource NameViewModelBindingProxy},
                                                                                                                           Path=Data.IsPinned}"
                                                                                                         Value="True">
                                                                                                <Setter Property="Header" Value="Unpin" />
                                                                                            </DataTrigger>
                                                                                        </Style.Triggers>
                                                                                    </Style>
                                                                                </MenuItem.Style>
                                                                            </MenuItem>
                                                                        </ContextMenu>
                                                                    </Button.ContextMenu>

                                                                    <Button.Triggers>
                                                                        <EventTrigger RoutedEvent="Button.Click"
                                                                                      SourceName="ActionsButton">
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActionsButtonContextMenu"
                                                                                                                   Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                <system:Boolean>True</system:Boolean>
                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                        </DiscreteObjectKeyFrame>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </EventTrigger>
                                                                    </Button.Triggers>

                                                                    <Button.Style>
                                                                        <Style BasedOn="{StaticResource NameActionButton}"
                                                                               TargetType="Button">
                                                                            <Setter Property="Opacity" Value="0.4" />

                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding ElementName=ActionsButtonContextMenu,
                                                                                                               Path=IsOpen}"
                                                                                             Value="True">
                                                                                    <Setter Property="Opacity" Value="1" />
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                                                                              AncestorType=CheckBox},
                                                                                                               Path=IsMouseOver}"
                                                                                             Value="True">
                                                                                    <Setter Property="Opacity" Value="1" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>
                                                                </Button>
                                                            </StackPanel>
                                                        </Grid>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBox x:Name="NewNameToAdd"
                                             Grid.Column="0"
                                             Margin="2"
                                             materialDesign:HintAssist.Hint="Add Name"
                                             KeyUp="NewNameToAdd_KeyUp"
                                             Text="{Binding NewNameToAdd.Value,
                                                            UpdateSourceTrigger=PropertyChanged}" />

                                    <Button Grid.Column="0"
                                            Margin="5 0"
                                            Padding="0 -1 -1 0"
                                            HorizontalAlignment="Right"
                                            Command="{Binding ClearNewNameToAddCommand}"
                                            Content="&#x2716;"
                                            FontSize="10"
                                            Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                            IsTabStop="False"
                                            ToolTip="Clear name">
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource {x:Type Button}}"
                                                   TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=NewNameToAdd,
                                                                                   Path=Text}"
                                                                 Value="">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <Button Grid.Column="1"
                                            Margin="5 0"
                                            Padding="0 -1 -1 0"
                                            Command="{Binding AddEnteredNameCommand}"
                                            CommandParameter="{Binding ElementName=NewNameToAdd,
                                                                       Path=Text}"
                                            Content="+" />
                                </Grid>

                                <ListBox x:Name="SelectedNames"
                                         Grid.Row="1"
                                         MaxHeight="156"
                                         Margin="0 0 0 2"
                                         BorderBrush="{StaticResource MaterialDesignBody}"
                                         ItemsSource="{Binding SelectedNames}">
                                    <ListBox.Style>
                                        <Style BasedOn="{StaticResource NamesListBoxStyle}"
                                               TargetType="{x:Type ListBox}">
                                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedNames.Count}"
                                                             Value="0">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.Style>
                                </ListBox>

                                <ListBox x:Name="Names"
                                         Grid.Row="2"
                                         Margin="0 2 0 0"
                                         ItemsSource="{Binding Names}"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                                         Style="{StaticResource NamesListBoxStyle}" />
                            </Grid>
                        </GroupBox>

                        <!--  Features  -->
                        <GroupBox Grid.Column="1"
                                  Margin="2 0 0 0"
                                  Header="Features"
                                  Style="{DynamicResource MaterialDesignCardGroupBox}">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   VerticalAlignment="Center"
                                                   Text="Features" />
                                        <StackPanel Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    Orientation="Horizontal">
                                            <ToggleButton x:Name="DragDropEnabled"
                                                          Margin="0 0 5 0"
                                                          IsChecked="{Binding ElementName=MainWindowView,
                                                                              Path=DataContext.EnableFeatureEditing.Value}"
                                                          ToolTip="Enable editing features" />
                                            <Button Padding="0 -10"
                                                    Command="{Binding ElementName=MainWindowView,
                                                                      Path=DataContext.ExpandAllFeaturesCommand}"
                                                    Content="+"
                                                    FontSize="16"
                                                    FontWeight="Black"
                                                    ToolTip="Expand all" />
                                            <Button Margin="7 0 0 0"
                                                    Padding="0 -10"
                                                    Command="{Binding ElementName=MainWindowView,
                                                                      Path=DataContext.CollapseAllFeaturesCommand}"
                                                    Content="-"
                                                    FontSize="16"
                                                    FontWeight="Black"
                                                    ToolTip="Collapse all" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="5" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <TreeView x:Name="Features"
                                          Grid.Row="0"
                                          dd:DragDrop.IsDragSource="{Binding EnableFeatureEditing.Value}"
                                          dd:DragDrop.IsDropTarget="{Binding EnableFeatureEditing.Value}"
                                          dd:DragDrop.UseDefaultDragAdorner="True"
                                          dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                          ItemsSource="{Binding Features}"
                                          SelectedItemChanged="Features_SelectedItemChanged"
                                          SelectedValuePath="">
                                    <TreeView.Resources>
                                        <HierarchicalDataTemplate x:Key="FeatureRootDataTemplate"
                                                                  DataType="viewModels:FeatureViewModel"
                                                                  ItemsSource="{Binding Instances}">
                                            <TextBlock Margin="0 0 0 4"
                                                       Padding="4 2"
                                                       Foreground="{StaticResource MaterialDesignBody}"
                                                       Text="{Binding .,
                                                                      Converter={x:Static ui:FeatureToDisplayStringConverter.Instance}}">

                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasSelectedInstances.Value}"
                                                                         Value="True">
                                                                <Setter Property="Background" Value="{StaticResource FeatureHighlightBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </HierarchicalDataTemplate>
                                        <HierarchicalDataTemplate x:Key="FeatureInstanceDataTemplate"
                                                                  DataType="viewModels:FeatureInstanceViewModel"
                                                                  ItemsSource="{Binding Instances}">
                                            <CheckBox IsChecked="{Binding IsSelected}">
                                                <CheckBox.Style>
                                                    <Style TargetType="CheckBox">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                           Path=DataContext.HasTouchInput}"
                                                                         Value="True">
                                                                <Setter Property="Margin" Value="0 10" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>

                                                <TextBlock Foreground="{StaticResource MaterialDesignBody}">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0}: {1}">
                                                            <Binding Path="InstanceName" />
                                                            <Binding Path="InstanceCode" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </CheckBox>
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>
                                    <TreeView.ItemTemplateSelector>
                                        <ui:FeaturesTreeViewItemTemplateSelector FeatureInstanceTemplate="{StaticResource FeatureInstanceDataTemplate}"
                                                                                 FeatureRootTemplate="{StaticResource FeatureRootDataTemplate}" />
                                    </TreeView.ItemTemplateSelector>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded.Value, Mode=TwoWay}" />
                                            <Setter Property="Margin" Value="0 0 0 7" />
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                </TreeView>

                                <GridSplitter Grid.Row="1"
                                              Height="5"
                                              HorizontalAlignment="Stretch"
                                              ResizeBehavior="PreviousAndNext"
                                              ResizeDirection="Rows"
                                              Visibility="{Binding Converter={x:Static ui:InvertableBooleanToVisibilityConverter.Instance},
                                                                   Path=EnableFeatureEditing.Value}" />

                                <Grid Grid.Row="2"
                                      Visibility="{Binding Converter={x:Static ui:InvertableBooleanToVisibilityConverter.Instance},
                                                           Path=EnableFeatureEditing.Value}">
                                    <materialDesign:Card VerticalAlignment="Stretch"
                                                         materialDesign:ShadowAssist.ShadowDepth="Depth2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBox Grid.Column="0"
                                                         Margin="2"
                                                         materialDesign:HintAssist.Hint="Feature Name"
                                                         Text="{Binding EditingFeatureName.Value,
                                                                        UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBox Grid.Column="1"
                                                         Margin="2"
                                                         materialDesign:HintAssist.Hint="Feature Code"
                                                         Text="{Binding EditingFeatureCode.Value,
                                                                        UpdateSourceTrigger=PropertyChanged}" />

                                                <StackPanel Grid.Column="2"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <TextBlock VerticalAlignment="Center"
                                                               Text="➔" />
                                                    <TextBox Width="50"
                                                             Margin="5 0"
                                                             materialDesign:HintAssist.Hint="Include"
                                                             Text="{Binding EditingFeatureToInclude.Value,
                                                                            UpdateSourceTrigger=PropertyChanged}" />
                                                </StackPanel>

                                                <Button Grid.Column="3"
                                                        Margin="5 0"
                                                        Padding="-2 -1 -1 0"
                                                        Command="{Binding ConfirmEditingFeatureCommand}"
                                                        Content="&#x2714;"
                                                        FontSize="10"
                                                        Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                                        IsTabStop="False"
                                                        ToolTip="Accept changes" />

                                                <Button Grid.Column="4"
                                                        Margin="5 0"
                                                        Padding="0 -1 -1 0"
                                                        Command="{Binding ClearSelectedFeatureCommand}"
                                                        Content="&#x2716;"
                                                        FontSize="10"
                                                        Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                                        IsTabStop="False"
                                                        ToolTip="Discard changes" />
                                            </Grid>

                                            <ScrollViewer Grid.Row="1"
                                                          VerticalScrollBarVisibility="Auto">
                                                <ItemsControl VerticalAlignment="Stretch"
                                                              Grid.IsSharedSizeScope="True"
                                                              ItemsSource="{Binding EditingFeatureInstances}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"
                                                                                      SharedSizeGroup="InstanceNumber" />
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <TextBlock Grid.Column="0"
                                                                           Margin="0 0 5 0"
                                                                           HorizontalAlignment="Right"
                                                                           VerticalAlignment="Center"
                                                                           Opacity="0.5">
                                                                    <TextBlock.Text>
                                                                        <MultiBinding Converter="{x:Static ui:IndexOfConverter.Instance}"
                                                                                      ConverterParameter="True">
                                                                            <Binding RelativeSource="{RelativeSource FindAncestor,
                                                                                                                     AncestorType={x:Type ItemsControl}}" />
                                                                            <Binding Path="." />
                                                                        </MultiBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>

                                                                <TextBox x:Name="InstanceName"
                                                                         Grid.Column="1"
                                                                         Margin="2"
                                                                         materialDesign:HintAssist.Hint="Name"
                                                                         KeyUp="InstanceName_KeyUp"
                                                                         Text="{Binding InstanceName.Value,
                                                                                        UpdateSourceTrigger=LostFocus}" />
                                                                <TextBox x:Name="InstanceCode"
                                                                         Grid.Column="2"
                                                                         Margin="2"
                                                                         materialDesign:HintAssist.Hint="Code"
                                                                         KeyUp="InstanceCode_KeyUp"
                                                                         Text="{Binding InstanceCode.Value,
                                                                                        UpdateSourceTrigger=PropertyChanged}" />
                                                                <Button Grid.Column="3"
                                                                        Padding="0 -1 -1 0"
                                                                        Command="{Binding ElementName=MainWindowView,
                                                                                          Path=DataContext.RemoveFeatureInstanceRowCommand}"
                                                                        CommandParameter="{Binding .}"
                                                                        Content="-"
                                                                        IsTabStop="False">
                                                                    <Button.Style>
                                                                        <Style BasedOn="{StaticResource {x:Type Button}}"
                                                                               TargetType="{x:Type Button}">
                                                                            <Setter Property="Margin" Value="5 0" />

                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding ElementName=MainWindowView,
                                                                                                               Path=DataContext.HasTouchInput}"
                                                                                             Value="True">
                                                                                    <Setter Property="Margin" Value="5 2" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>
                                                                </Button>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </ScrollViewer>

                                            <Button Grid.Row="2"
                                                    Padding="1 -1 0 0"
                                                    HorizontalAlignment="Left"
                                                    Command="{Binding AddFeatureInstanceRowCommand}"
                                                    Content="+"
                                                    FontWeight="Black"
                                                    IsTabStop="False" />
                                        </Grid>
                                    </materialDesign:Card>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </Grid>

                    <Grid Grid.Row="2"
                          Margin="0 4 0 0">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedFile.Value}"
                                                 Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0"
                                    Width="150">
                            <TextBox Grid.Column="0"
                                     Margin="0 2 5 -1"
                                     Padding="2 0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     materialDesign:HintAssist.Hint="Prefixes"
                                     Text="{Binding Path=DestinationDirectoryPrefixes.Value,
                                                    UpdateSourceTrigger=PropertyChanged}"
                                     ToolTip="Destination directory prefixes" />
                            <ComboBox Grid.Column="1"
                                      Padding="2 6"
                                      HorizontalAlignment="Stretch"
                                      DisplayMemberPath="Name"
                                      ItemsSource="{Binding DestinationDirectories}"
                                      SelectedItem="{Binding SelectedDestinationDirectory.Value}"
                                      ToolTip="Destination directory" />
                        </StackPanel>
                        <TextBlock x:Name="ResultingFilePath"
                                   Grid.Column="1"
                                   Height="Auto"
                                   Margin="5 0"
                                   VerticalAlignment="Center"
                                   Text="{Binding ResultingFilePath.Value}"
                                   TextWrapping="Wrap" />
                        <Button Grid.Column="2"
                                Padding="0"
                                Command="{Binding ApplyCommand}"
                                ToolTip="Apply">

                            <materialDesign:PackIcon Kind="Check" />
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Settings/Log"
                     TextElement.Foreground="{DynamicResource MaterialDesignBody}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Row="0"
                              Header="Replacements"
                              Style="{DynamicResource MaterialDesignCardGroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Column="0"
                                         Margin="2"
                                         materialDesign:HintAssist.Hint="To Replace"
                                         Text="{Binding ToReplaceToAdd.Value,
                                                        UpdateSourceTrigger=PropertyChanged}" />
                                <TextBox Grid.Column="1"
                                         Margin="2"
                                         materialDesign:HintAssist.Hint="Replace With"
                                         Text="{Binding ReplaceWithToAdd.Value,
                                                        UpdateSourceTrigger=PropertyChanged}" />

                                <Button Grid.Column="2"
                                        Margin="5 0"
                                        Padding="0 -1 -1 0"
                                        Command="{Binding AddReplacementCommand}"
                                        Content="+" />
                            </Grid>

                            <ItemsControl Grid.Row="1"
                                          ItemsSource="{Binding Replacements}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0 3">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0"
                                                       Text="{Binding ToReplace}" />
                                            <TextBlock Grid.Column="1">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Text" Value="{Binding ReplaceWith}" />

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ReplaceWith}"
                                                                         Value="">
                                                                <Setter Property="Opacity" Value="0.5" />
                                                                <Setter Property="Text" Value="(remove)" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="1"
                              Margin="0 5 0 0"
                              Header="Activity Log"
                              Style="{DynamicResource MaterialDesignCardGroupBox}">
                        <DataGrid x:Name="ActivityLog"
                                  Margin="-8"
                                  materialDesign:DataGridAssist.CellPadding="4 3 3 3"
                                  materialDesign:DataGridAssist.ColumnHeaderPadding="4 3 3 3"
                                  AutoGenerateColumns="False"
                                  ItemsSource="{Binding ActivityLog}"
                                  VirtualizingStackPanel.IsVirtualizing="False">
                            <DataGrid.Columns>
                                <materialDesign:DataGridTextColumn Width="150"
                                                                   Binding="{Binding Timestamp,
                                                                                     StringFormat=s}"
                                                                   Header="Timestamp"
                                                                   IsReadOnly="True" />
                                <materialDesign:DataGridTextColumn Width="100"
                                                                   Binding="{Binding LogLevel}"
                                                                   Header="Level"
                                                                   IsReadOnly="True" />
                                <materialDesign:DataGridTextColumn Width="100"
                                                                   Binding="{Binding Activity}"
                                                                   Header="Activity"
                                                                   IsReadOnly="True" />
                                <materialDesign:DataGridTextColumn Binding="{Binding Message}"
                                                                   Header="Message"
                                                                   IsReadOnly="True" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>

        <Button Grid.Column="2"
                Margin="0 15 5 0"
                Padding="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Command="{Binding ElementName=MainWindowView,
                                  Path=DataContext.SaveSettingsCommand}"
                ToolTip="Save Settings">

            <materialDesign:PackIcon Kind="ContentSave" />
        </Button>

        <Border Grid.Column="0"
                Grid.ColumnSpan="3"
                Visibility="{Binding IsBusy.Value,
                                     Converter={x:Static ui:InvertableBooleanToVisibilityConverter.Instance}}">
            <Border.Background>
                <SolidColorBrush Opacity=".3"
                                 Color="White" />
            </Border.Background>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ProgressBar Grid.Column="1"
                             Height="35"
                             Maximum="100"
                             Minimum="0"
                             Value="{Binding BusyProgress.Value,
                                             Mode=OneWay}" />
            </Grid>
        </Border>
    </Grid>
</Window>
